import { query } from './database.js';
import fs from 'fs';
import path from 'path';

async function importMaterialsCSV() {
  try {
    console.log('üì• –ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏–∑ CSV...');

    // –ß–∏—Ç–∞–µ–º CSV —Ñ–∞–π–ª
    const csvPath = path.join(process.cwd(), 'BDM (1).csv');
    const csvContent = fs.readFileSync(csvPath, 'utf8');
    const lines = csvContent.split('\n').filter(line => line.trim());

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${lines.length - 1} –∑–∞–ø–∏—Å–µ–π –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞`);

    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    const dataLines = lines.slice(1);
    const materials = [];

    for (const line of dataLines) {
      if (!line.trim()) continue;

      const [material_id, material_name, image_url, item_url, unit, unit_price, expenditure, weight] =
        line.split(';');

      // –°–æ–±–∏—Ä–∞–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã
      if (material_id && material_id.trim() && material_name && material_name.trim()) {
        materials.push({
          id: material_id.trim(),
          name: material_name.trim(),
          image_url: (image_url && image_url.trim()) ? image_url.trim() : null,
          item_url: (item_url && item_url.trim()) ? item_url.trim() : null,
          unit: (unit && unit.trim()) ? unit.trim() : null,
          unit_price: (unit_price && unit_price.trim()) ? parseFloat(unit_price.trim().replace(/\s/g, '').replace(',', '.')) : null,
          expenditure: (expenditure && expenditure.trim()) ? parseFloat(expenditure.trim().replace(/\s/g, '').replace(',', '.')) : null,
          weight: (weight && weight.trim()) ? parseFloat(weight.trim().replace(/\s/g, '').replace(',', '.')) : null
        });
      }
    }

    console.log(`üèóÔ∏è –ú–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞: ${materials.length}`);

    // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –Ω–æ –ø–æ—Å–∫–æ–ª—å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∫–∞–∑–∞–ª —É–¥–∞–ª–∏–ª —Ç–µ—Å—Ç–æ–≤—ã–µ, –≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ –Ω—É–∂–Ω–æ)
    // console.log('üßπ –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã...');
    // await query('DELETE FROM materials');

    // –í—Å—Ç–∞–≤–ª—è–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã
    console.log('üìù –í—Å—Ç–∞–≤–ª—è–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã...');
    let imported = 0;
    for (const material of materials) {
      try {
        await query(`
          INSERT INTO materials (id, name, image_url, item_url, unit, unit_price, expenditure, weight)
          VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
          ON CONFLICT (id) DO UPDATE SET
            name = EXCLUDED.name,
            image_url = EXCLUDED.image_url,
            item_url = EXCLUDED.item_url,
            unit = EXCLUDED.unit,
            unit_price = EXCLUDED.unit_price,
            expenditure = EXCLUDED.expenditure,
            weight = EXCLUDED.weight,
            updated_at = now()
        `, [material.id, material.name, material.image_url, material.item_url, material.unit, material.unit_price, material.expenditure, material.weight]);
        imported++;
        if (imported % 10 === 0) {
          console.log(`   –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: ${imported}/${materials.length}`);
        }
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ ${material.id}:`, error.message);
      }
    }

    console.log(`‚úÖ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${imported} –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏–∑ ${materials.length}`);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const stats = await query('SELECT COUNT(*) FROM materials');
    console.log(`üìä –í—Å–µ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –≤ –ë–î: ${stats.rows[0].count}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞:', error.message);
  } finally {
    process.exit(0);
  }
}

importMaterialsCSV();
